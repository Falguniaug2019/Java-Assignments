1) create a multi-threaded application by using  "extends Thread " method.create 2 threads. they should display characters from A to J.




public class Thr extends Thread
{
	
	 public void run()
	{
		 display();
	}
   synchronized static void display()
    {
	 for(char x='A';x<='J';x++)
		{
			System.out.println(x+"    "+currentThread());
		}
    }
	public static void main(String args[])
	{
		Thr ref1=new Thr();
		Thr ref2=new Thr();
		
		
		ref1.setName("Azam ");
		ref1.start();
		ref2.start();
		
	}
	
}




.................................


2) above program  using "implements Runnable" method.



package Falzam;

public class Mul implements Runnable /* extends Thread*/
{
 public void run()
  {
	 disp();
  }
synchronized static public void disp()
 {
	 
 for(char ch='A';ch<='J';ch++)
 {
	  System.out.println(ch+"  "+Thread.currentThread());
 }
 }
	public static void main(String[] args) 
	{
		Mul a=new Mul();
	//	Mul b=new Mul();
	Thread t1=new Thread(a);
	Thread t2=new Thread(a);
		t2.start();
		t1.start();
	}

}



...........................


3) create 3 threads in such a way that while one thread is executing, 2 threads cannot interfere. they should display output "Exec  0" to "Exec 5".


package Falzam;

public class Mul /*implements Runnable*/ extends Thread
{
 synchronized public void run()
  {
	 for(int i=0;i<=5;i++)
	 {
		 System.out.println("exec "+ i+Thread.currentThread());
	 }
  }

	public static void main(String[] args) 
	{
		Mul a=new Mul();
	
	Thread t1=new Thread(a);
	Thread t2=new Thread(a);
	Thread t3=new Thread(a);
		t2.start();
		t1.start();
		t3.start();
	}

}


......................


4)create 2 threads. Write a program which displays number 1 to 10 using class lock. 
[hint:- use "implements Runnable" and synchronized block]


package Falzam;

public class Mul implements Runnable /*extends Thread*/
{
	
	public void run()
  {

synchronized(this)
 {
	 
for(int i=0;i<=5;i++)
 {
	
	if(i==2)
	{
	  try
	   {
			wait();
		}
	  catch (InterruptedException e) 
		{
		e.printStackTrace();
		}
	}
	else
	{
		System.out.println(i+" "+Thread.currentThread());
	}	
	notifyAll();
 }
 }
  }
	public static void main(String[] args) 
	{
		Mul a=new Mul();
	
	Thread t1=new Thread(a);
	Thread t2=new Thread(a);
	Thread t3=new Thread(a);
	t1.setName("Azam");
	t2.setName("Falguni");
	t3.setName("Falzam");
		t2.start();
		t1.start();
		t3.start();
	}

}



.........................................


5) create 2 threads
	one thread will display 1 to 50
	second thread will display 50 to 1
both the threads should start simultaneously.

(use implements method)



package Falzam;

public class Mul implements Runnable /*extends Thread*/
{
	static int cnt;
	
	public static void setCnt(int no)
	{
		cnt=no;
	}
		synchronized public void run()
		{
			if(cnt==0)
			{
			for(int i=0;i<=50;i++)
			{

				System.out.println(i+" "+Thread.currentThread());
				setCnt(1);
			
				try
				{
				//	Thread.	sleep(100);
					notifyAll();
					wait();
				}
				catch (InterruptedException e) 
				{
					e.printStackTrace();
				}
				
			}
			}
			
			 if(cnt==1)
				{
					for(int j=50;j>=0;j--)
					{
						System.out.println(j+" "+Thread.currentThread());
						setCnt(0);
					
						try
						{
				//			Thread.	sleep(100);
							notifyAll();
							wait();
						}
						catch (InterruptedException e)
						{
						
							e.printStackTrace();
						}
						
					}
				}
			
		}
		

	
	
	public static void main(String[] args) 
	{
		Mul a=new Mul();
	
	Thread t1=new Thread(a);
	Thread t2=new Thread(a);

	t1.setName("Azam");
	t2.setName("Falguni");
	t1.start();
		t2.start();
		
		try
		{
		//	t1.join();
			t2.join();
		}
		catch (InterruptedException e) 
		{
			
			e.printStackTrace();
		}
		System.out.println("azasdfddfgfdvxgdfgdfdfzsfsscxvxcbascx ");
	}

}




